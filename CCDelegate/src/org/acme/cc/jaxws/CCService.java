//
// Generated By:JAX-WS RI IBM 2.2.1-07/09/2014 01:53 PM(foreman)- (JAXB RI IBM 2.2.3-07/07/2014 12:56 PM(foreman)-)
//


package org.acme.cc.jaxws;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

@WebServiceClient(name = "CCService", targetNamespace = "urn:issw:bare:wssec:cc:query", wsdlLocation = "META-INF/wsdl/ccQuery.wsdl")
public class CCService
    extends Service
{

    private final static URL CCSERVICE_WSDL_LOCATION;
    private final static WebServiceException CCSERVICE_EXCEPTION;
    private final static QName CCSERVICE_QNAME = new QName("urn:issw:bare:wssec:cc:query", "CCService");

    static {
            CCSERVICE_WSDL_LOCATION = org.acme.cc.jaxws.CCService.class.getResource("/META-INF/wsdl/ccQuery.wsdl");
        WebServiceException e = null;
        if (CCSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/ccQuery.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        CCSERVICE_EXCEPTION = e;
    }

    public CCService() {
        super(__getWsdlLocation(), CCSERVICE_QNAME);
    }

    public CCService(URL wsdlLocation) {
        super(wsdlLocation, CCSERVICE_QNAME);
    }

    public CCService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns CCPortType
     */
    @WebEndpoint(name = "CCService")
    public CCPortType getCCService() {
        return super.getPort(new QName("urn:issw:bare:wssec:cc:query", "CCService"), CCPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CCPortType
     */
    @WebEndpoint(name = "CCService")
    public CCPortType getCCService(WebServiceFeature... features) {
        return super.getPort(new QName("urn:issw:bare:wssec:cc:query", "CCService"), CCPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CCSERVICE_EXCEPTION!= null) {
            throw CCSERVICE_EXCEPTION;
        }
        return CCSERVICE_WSDL_LOCATION;
    }

}
